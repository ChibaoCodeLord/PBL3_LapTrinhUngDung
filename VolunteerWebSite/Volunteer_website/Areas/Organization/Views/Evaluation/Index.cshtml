@model IPagedList<Volunteer_website.Models.Evaluation>
@using Volunteer_website.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Evaluation List";
    Layout = "~/Areas/Organization/Views/OrgLayout.cshtml";
}

<!-- SweetAlert Confirmation Modal -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<div class="container-fluid">
    <div class="header-section border rounded p-4 mb-4 bg-white">
        <h1 class="text-center my-4 heading-title">Evaluation Management</h1>
    </div>

    <div class="body-section border rounded p-4 bg-white">
        <!-- Hiển thị thông báo từ TempData -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fa-solid fa-circle-check me-2"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fa-solid fa-circle-exclamation me-2"></i> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
            <div class="search-container">
                <form asp-action="Index" method="get" class="d-flex align-items-center">
                    <input type="text"
                           name="searchValue"
                           id="searchBoxVolunteers"
                           class="form-control me-2"
                           placeholder="Search Event.."
                           value="@ViewBag.SearchValue" />

                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i> <!-- Font Awesome search icon -->
                    </button>
                </form>
            </div>
            <a asp-area="Organization" asp-controller="Evaluation" asp-action="Create" class="btn btn-primary create-btn"><i class="fa-solid fa-plus"></i> Create Evaluation</a>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover shadow-sm">
                <thead class="table-dark">
                    <tr>
                        <th>Evaluation ID</th>
                        <th>Volunteer Name</th>
                        <th>Event Name</th>
                        <th>Feedback</th>
                        <th>Completed</th>
                        <th>Evaluated At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var reg = item.Reg;
                        Volunteer? volunteer = null;
                        Event? evt = null;

                        if (reg != null)
                        {
                            ViewBag.Volunteers.TryGetValue(reg.VolunteerId, out volunteer);
                            ViewBag.Events.TryGetValue(reg.EventId, out evt);
                        }

                        <tr>
                            <td>@item.EvaluationId</td>
                            <td>@(volunteer?.Name ?? "N/A")</td>
                            <td>@(evt?.Name ?? "N/A")</td>
                            <td>@(item.Feedback ?? "No feedback")</td>
                            <td>
                                @if (item.IsCompleted)
                                {
                                    <span class="badge bg-success">Yes</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">No</span>
                                }
                            </td>
                            <td>@item.EvaluatedAt.ToString("dd/MM/yyyy")</td>
                            <td class="action_btn text-center">
                                <a asp-action="SendEmail" asp-controller="Evaluation" asp-route-id="@item.EvaluationId" class="btn btn-primary btn-sm">
                                    <i class="fa-solid fa-envelope"></i> Send Email
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination d-flex justify-content-center mt-4">
            @if (Model.HasPreviousPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })"
                   class="pagination-link rounded me-1">«</a>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <a href="@Url.Action("Index", new { page = i })"
                   class="pagination-link rounded me-1 @(i == Model.PageNumber ? "active btn btn-primary" : "btn btn-outline-secondary")">@i</a>
            }

            @if (Model.HasNextPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })"
                   class="pagination-link rounded">»</a>
            }
        </div>
    </div>
</div>
