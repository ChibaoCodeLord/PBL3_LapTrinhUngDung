@model List<Volunteer_website.Models.Volunteer>
@using System.Linq

@{
    ViewData["Title"] = "Volunteer List";
    var role = Context.Session.GetInt32("UserRole");
    Layout = (role == 0) ? "~/Views/Shared/User_Layout.cshtml" : "~/Views/Shared/_Layout.cshtml";
}

<div class="hero-wrap" style="background-image: url('@Url.Content("~/images/bg_1.jpg")');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center" data-scrollax-parent="true">
            <div class="col-md-7 ftco-animate text-center" data-scrollax=" properties: { translateY: '70%' }">
                <p class="breadcrumbs" data-scrollax="properties: { translateY: '30%', opacity: 1.6 }">
                    <span class="mr-2"><a href="@Url.Action("Index", "Home")">Home </a></span>
                    <span>Volunteer List</span>
                </p>
                <h1 class="mb-3 bread" data-scrollax="properties: { translateY: '30%', opacity: 1.6 }">VOLUNTEERS</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section">
    <div class="container">
        <div class="row justify-content-center mb-5 pb-3">
            <div class="col-md-7 heading-section ftco-animate text-center">
                <h2 class="mb-4">Volunteer List</h2>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-12">
                <div class="input-group">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search volunteers by name or email...">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="button" onclick="searchTable()">Search</button>
                    </div>
                </div>
            </div>
        </div>

        @if (Model == null || !Model.Any())
        {
            <div class="alert alert-info">
                No volunteer data available.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered" id="volunteerTable">
                    <thead class="thead-dark">
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Join Date</th>
                            <th>Total Donations</th>
                            <th>Events Registered</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Count; i++)
                        {
                            var volunteer = Model[i];
                            var volunteerInfo = ViewBag.VolunteerInfo[volunteer.VolunteerId];
                            <tr>
                                <td>@(i + 1)</td>
                                <td>@volunteer.Name</td>
                                <td>@volunteer.Email</td>
                                <td>@volunteer.PhoneNumber</td>
                                <td>@volunteerInfo.JoinDate</td>
                                <td>@volunteerInfo.TotalDonations</td>
                                <td>@volunteerInfo.EventCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</section>

<script>
    function searchTable() {
        let input = document.getElementById("searchInput").value.toLowerCase();
        let table = document.getElementById("volunteerTable");
        let tr = table.getElementsByTagName("tr");

        for (let i = 1; i < tr.length; i++) {
            let tdName = tr[i].getElementsByTagName("td")[1];
            let tdEmail = tr[i].getElementsByTagName("td")[2];
            if (tdName || tdEmail) {
                let nameText = tdName.textContent || tdName.innerText;
                let emailText = tdEmail.textContent || tdEmail.innerText;
                if (nameText.toLowerCase().indexOf(input) > -1 || emailText.toLowerCase().indexOf(input) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

<style>
    .table-responsive {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }

    .table {
        margin-bottom: 0;
    }

    .thead-dark {
        background-color: #2c3e50;
        color: white;
    }

    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .form-control {
        border-radius: 20px;
        padding: 10px 20px;
    }

    .btn-primary {
        border-radius: 20px;
        padding: 10px 20px;
    }

    .input-group {
        max-width: 500px;
        margin: 0 auto 20px;
    }
</style>